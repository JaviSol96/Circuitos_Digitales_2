/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "Counter.v:96" *)
module Counter16(clk, enb, modo, D2, Q2, rco1, rco2, rco3, rco4);
  wire [1:0] _00_;
  wire _01_;
  (* src = "Counter.v:112" *)
  wire _02_;
  (* src = "Counter.v:112" *)
  wire _03_;
  (* src = "Counter.v:113" *)
  wire _04_;
  (* src = "Counter.v:114" *)
  wire _05_;
  (* src = "Counter.v:99" *)
  input [15:0] D2;
  (* src = "Counter.v:100" *)
  output [15:0] Q2;
  (* src = "Counter.v:96" *)
  input clk;
  (* src = "Counter.v:106" *)
  wire clk2;
  (* src = "Counter.v:107" *)
  wire clk3;
  (* src = "Counter.v:108" *)
  wire clk4;
  (* src = "Counter.v:97" *)
  input enb;
  (* src = "Counter.v:98" *)
  input [1:0] modo;
  (* src = "Counter.v:109" *)
  wire modo_11;
  (* src = "Counter.v:101" *)
  output rco1;
  (* src = "Counter.v:102" *)
  output rco2;
  (* src = "Counter.v:103" *)
  output rco3;
  (* src = "Counter.v:104" *)
  output rco4;
  assign _01_ = _00_[0] |(* src = "Counter.v:111" *)  _00_[1];
  assign modo_11 = ~(* src = "Counter.v:111" *) _01_;
  assign clk2 = _02_ |(* src = "Counter.v:112" *)  _03_;
  assign _03_ = rco1 &(* src = "Counter.v:112" *)  _01_;
  assign _04_ = rco2 &(* src = "Counter.v:113" *)  _01_;
  assign clk3 = _02_ |(* src = "Counter.v:113" *)  _04_;
  assign _02_ = clk &(* src = "Counter.v:114" *)  modo_11;
  assign _05_ = rco3 &(* src = "Counter.v:114" *)  _01_;
  assign clk4 = _02_ |(* src = "Counter.v:114" *)  _05_;
  assign _00_[0] = modo[0] ^(* src = "Counter.v:111" *)  1'h1;
  assign _00_[1] = modo[1] ^(* src = "Counter.v:111" *)  1'h1;
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:118" *)
  counter contador1 (
    .D(D2[3:0]),
    .Q(Q2[3:0]),
    .clk(clk),
    .enb(enb),
    .modo(modo),
    .rco(rco1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:119" *)
  counter contador2 (
    .D(D2[7:4]),
    .Q(Q2[7:4]),
    .clk(clk2),
    .enb(enb),
    .modo(modo),
    .rco(rco2)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:120" *)
  counter contador3 (
    .D(D2[11:8]),
    .Q(Q2[11:8]),
    .clk(clk3),
    .enb(enb),
    .modo(modo),
    .rco(rco3)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:121" *)
  counter contador4 (
    .D(D2[15:12]),
    .Q(Q2[15:12]),
    .clk(clk4),
    .enb(enb),
    .modo(modo),
    .rco(rco4)
  );
endmodule

(* src = "flipflop.v:4" *)
module DFF_nbits_enb(clk, enb, d, q);
  (* src = "flipflop.v:12" *)
  wire _0_;
  (* src = "flipflop.v:6" *)
  input clk;
  (* src = "flipflop.v:8" *)
  input d;
  (* src = "flipflop.v:7" *)
  input enb;
  (* src = "flipflop.v:9" *)
  output q;
  assign _0_ = enb ? (* src = "flipflop.v:13" *) d : q;
  (* src = "flipflop.v:12" *)
  DFF _2_ (
    .C(clk),
    .D(_0_),
    .Q(q)
  );
endmodule

(* src = "Counter.v:3" *)
module counter(clk, enb, modo, D, Q, rco);
  (* src = "Counter.v:21" *)
  wire _000_;
  (* src = "Counter.v:21" *)
  wire _001_;
  (* src = "Counter.v:21" *)
  wire _002_;
  (* src = "Counter.v:21" *)
  wire _003_;
  (* src = "Counter.v:27" *)
  (* unused_bits = "4" *)
  wire [31:0] _004_;
  wire [1:0] _005_;
  wire [1:0] _006_;
  wire [1:0] _007_;
  wire [1:0] _008_;
  wire [1:0] _009_;
  wire [1:0] _010_;
  wire [1:0] _011_;
  wire [1:0] _012_;
  wire [1:0] _013_;
  wire [1:0] _014_;
  wire _015_;
  wire [1:0] _016_;
  wire _017_;
  wire _018_;
  wire [3:0] _019_;
  wire [1:0] _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  (* src = "Counter.v:52" *)
  wire _027_;
  (* src = "Counter.v:52" *)
  wire _028_;
  (* src = "Counter.v:52" *)
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  (* src = "Counter.v:62|Counter.v:22|<techmap.v>:432" *)
  wire [3:0] _034_;
  (* src = "Counter.v:62|Counter.v:22|<techmap.v>:428" *)
  wire _035_;
  (* src = "Counter.v:62|Counter.v:22|<techmap.v>:432" *)
  wire [15:0] _036_;
  (* src = "Counter.v:62|Counter.v:22|<techmap.v>:428" *)
  wire [3:0] _037_;
  (* src = "Counter.v:39" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _038_;
  (* src = "Counter.v:51" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _039_;
  (* src = "Counter.v:27|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "3" *)
  wire [31:0] _040_;
  (* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *)
  wire _041_;
  (* src = "Counter.v:39|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _042_;
  (* src = "Counter.v:51|Counter.v:39|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _043_;
  (* src = "Counter.v:39|<techmap.v>:260|<techmap.v>:221" *)
  wire _044_;
  (* src = "Counter.v:39|<techmap.v>:260|<techmap.v>:229" *)
  wire _045_;
  (* src = "Counter.v:51|Counter.v:39|<techmap.v>:260|<techmap.v>:229" *)
  wire _046_;
  (* src = "Counter.v:6" *)
  input [3:0] D;
  (* src = "Counter.v:10" *)
  wire [3:0] D_In;
  (* src = "Counter.v:11" *)
  wire D_Out;
  (* src = "Counter.v:7" *)
  output [3:0] Q;
  (* src = "Counter.v:3" *)
  input clk;
  (* src = "Counter.v:4" *)
  input enb;
  (* src = "Counter.v:5" *)
  input [1:0] modo;
  (* src = "Counter.v:8" *)
  output rco;
  assign _005_[0] = _004_[0] |(* src = "Counter.v:28" *)  _019_[1];
  assign _005_[1] = _019_[2] |(* src = "Counter.v:28" *)  _019_[3];
  assign _021_ = _005_[0] |(* src = "Counter.v:28" *)  _005_[1];
  assign _006_[0] = _004_[0] |(* src = "Counter.v:52" *)  Q[1];
  assign _022_ = _006_[0] |(* src = "Counter.v:52" *)  _006_[1];
  assign _007_[0] = Q[0] |(* src = "Counter.v:52" *)  _019_[1];
  assign _006_[1] = Q[2] |(* src = "Counter.v:52" *)  Q[3];
  assign _023_ = _007_[0] |(* src = "Counter.v:52" *)  _006_[1];
  assign _024_ = _020_[0] |(* src = "Counter.v:62|Counter.v:22" *)  _020_[1];
  assign _025_ = modo[0] |(* src = "Counter.v:50|Counter.v:22" *)  _020_[1];
  assign _026_ = _020_[0] |(* src = "Counter.v:38|Counter.v:22" *)  modo[1];
  assign _008_[0] = _034_[0] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _034_[1];
  assign _008_[1] = _034_[2] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _034_[3];
  assign _035_ = _008_[0] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _008_[1];
  assign _041_ = _009_[0] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *)  _009_[1];
  assign _010_[0] = _036_[1] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _036_[5];
  assign _010_[1] = _036_[9] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _036_[13];
  assign _037_[1] = _010_[0] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _010_[1];
  assign _011_[0] = _036_[3] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _036_[7];
  assign _011_[1] = _036_[11] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _036_[15];
  assign _037_[3] = _011_[0] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _011_[1];
  assign _012_[0] = _036_[2] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _036_[6];
  assign _012_[1] = _036_[10] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _036_[14];
  assign _037_[2] = _012_[0] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _012_[1];
  assign _013_[0] = _036_[0] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _036_[4];
  assign _013_[1] = _036_[8] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _036_[12];
  assign _037_[0] = _013_[0] |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:441" *)  _013_[1];
  assign _009_[0] = _030_ |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *)  _031_;
  assign _009_[1] = _032_ |(* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *)  _033_;
  assign _014_[0] = Q[0] |(* src = "Counter.v:52" *)  Q[1];
  assign _015_ = _014_[0] |(* src = "Counter.v:52" *)  _006_[1];
  assign _016_[0] = D[0] |(* src = "Counter.v:63" *)  D[1];
  assign _016_[1] = D[2] |(* src = "Counter.v:63" *)  D[3];
  assign _017_ = _016_[0] |(* src = "Counter.v:63" *)  _016_[1];
  assign _018_ = modo[0] |(* src = "Counter.v:26|Counter.v:22" *)  modo[1];
  assign _001_ = ~(* src = "Counter.v:52" *) _015_;
  assign _000_ = ~(* src = "Counter.v:28" *) _021_;
  assign _027_ = ~(* src = "Counter.v:52" *) _022_;
  assign _028_ = ~(* src = "Counter.v:52" *) _023_;
  assign _003_ = ~(* src = "Counter.v:63" *) _017_;
  assign _030_ = ~(* src = "Counter.v:62|Counter.v:22" *) _024_;
  assign _031_ = ~(* src = "Counter.v:50|Counter.v:22" *) _025_;
  assign _032_ = ~(* src = "Counter.v:38|Counter.v:22" *) _026_;
  assign _033_ = ~(* src = "Counter.v:26|Counter.v:22" *) _018_;
  assign _029_ = _001_ |(* src = "Counter.v:52" *)  _027_;
  assign _002_ = _029_ |(* src = "Counter.v:52" *)  _028_;
  assign D_Out = _041_ ? (* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *) _035_ : 1'hx;
  assign D_In[0] = _041_ ? (* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *) _037_[0] : 1'hx;
  assign D_In[1] = _041_ ? (* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *) _037_[1] : 1'hx;
  assign D_In[2] = _041_ ? (* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *) _037_[2] : 1'hx;
  assign D_In[3] = _041_ ? (* src = "Counter.v:62|Counter.v:22|<techmap.v>:445" *) _037_[3] : 1'hx;
  assign _040_[1] = Q[1] &(* src = "Counter.v:27|<techmap.v>:260|<techmap.v>:221" *)  Q[0];
  assign _040_[2] = Q[2] &(* src = "Counter.v:27|<techmap.v>:260|<techmap.v>:229" *)  _040_[1];
  assign _044_ = _019_[1] &(* src = "Counter.v:39|<techmap.v>:260|<techmap.v>:221" *)  Q[0];
  assign _045_ = _019_[2] &(* src = "Counter.v:39|<techmap.v>:260|<techmap.v>:229" *)  _042_[1];
  assign _042_[1] = Q[1] |(* src = "Counter.v:39|<techmap.v>:260|<techmap.v>:221" *)  _044_;
  assign _042_[2] = Q[2] |(* src = "Counter.v:39|<techmap.v>:260|<techmap.v>:229" *)  _045_;
  assign _046_ = _019_[2] &(* src = "Counter.v:51|Counter.v:39|<techmap.v>:260|<techmap.v>:229" *)  _040_[1];
  assign _043_[2] = Q[2] |(* src = "Counter.v:51|Counter.v:39|<techmap.v>:260|<techmap.v>:229" *)  _046_;
  assign _020_[1] = modo[1] ^(* src = "Counter.v:50|Counter.v:22" *)  1'h1;
  assign _020_[0] = modo[0] ^(* src = "Counter.v:38|Counter.v:22" *)  1'h1;
  assign _034_[3] = _000_ &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _033_;
  assign _034_[2] = _001_ &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _032_;
  assign _034_[1] = _002_ &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _031_;
  assign _034_[0] = _003_ &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _030_;
  assign _036_[12] = _004_[0] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _033_;
  assign _036_[13] = _004_[1] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _033_;
  assign _036_[14] = _004_[2] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _033_;
  assign _036_[15] = _004_[3] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _033_;
  assign _036_[8] = _004_[0] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _032_;
  assign _036_[9] = _038_[1] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _032_;
  assign _036_[10] = _038_[2] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _032_;
  assign _036_[11] = _038_[3] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _032_;
  assign _036_[4] = _004_[0] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _031_;
  assign _036_[5] = _004_[1] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _031_;
  assign _036_[6] = _039_[2] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _031_;
  assign _036_[7] = _039_[3] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _031_;
  assign _036_[0] = D[0] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _030_;
  assign _036_[1] = D[1] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _030_;
  assign _036_[2] = D[2] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _030_;
  assign _036_[3] = D[3] &(* src = "Counter.v:62|Counter.v:22|<techmap.v>:434" *)  _030_;
  assign _004_[1] = Q[1] ^(* src = "Counter.v:27|<techmap.v>:263" *)  Q[0];
  assign _004_[2] = Q[2] ^(* src = "Counter.v:27|<techmap.v>:263" *)  _040_[1];
  assign _004_[3] = Q[3] ^(* src = "Counter.v:27|<techmap.v>:263" *)  _040_[2];
  assign _004_[0] = Q[0] ^(* src = "Counter.v:27|<techmap.v>:262" *)  1'h1;
  assign _038_[1] = _019_[1] ^(* src = "Counter.v:39|<techmap.v>:263" *)  Q[0];
  assign _038_[2] = _019_[2] ^(* src = "Counter.v:39|<techmap.v>:263" *)  _042_[1];
  assign _038_[3] = _019_[3] ^(* src = "Counter.v:39|<techmap.v>:263" *)  _042_[2];
  assign _019_[1] = Q[1] ^(* src = "Counter.v:39|<techmap.v>:262" *)  1'h1;
  assign _019_[2] = Q[2] ^(* src = "Counter.v:39|<techmap.v>:262" *)  1'h1;
  assign _039_[2] = _019_[2] ^(* src = "Counter.v:51|Counter.v:39|<techmap.v>:263" *)  _040_[1];
  assign _039_[3] = _019_[3] ^(* src = "Counter.v:51|Counter.v:39|<techmap.v>:263" *)  _043_[2];
  assign _019_[3] = Q[3] ^(* src = "Counter.v:51|Counter.v:39|<techmap.v>:262" *)  1'h1;
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:83" *)
  DFF_nbits_enb DFF_1bit (
    .clk(clk),
    .d(D_Out),
    .enb(enb),
    .q(rco)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:79" *)
  DFF_nbits_enb DFF_4bits1 (
    .clk(clk),
    .d(D_In[0]),
    .enb(enb),
    .q(Q[0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:80" *)
  DFF_nbits_enb DFF_4bits2 (
    .clk(clk),
    .d(D_In[1]),
    .enb(enb),
    .q(Q[1])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:81" *)
  DFF_nbits_enb DFF_4bits3 (
    .clk(clk),
    .d(D_In[2]),
    .enb(enb),
    .q(Q[2])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Counter.v:82" *)
  DFF_nbits_enb DFF_4bits4 (
    .clk(clk),
    .d(D_In[3]),
    .enb(enb),
    .q(Q[3])
  );
  assign _004_[31:5] = 27'h0000000;
  assign _007_[1] = _006_[1];
  assign _014_[1] = _006_[1];
  assign _019_[0] = _004_[0];
  assign { _038_[30:4], _038_[0] } = { _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _038_[31], _004_[0] };
  assign { _039_[30:4], _039_[1:0] } = { _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _039_[31], _004_[1:0] };
  assign { _040_[31:3], _040_[0] } = { 28'h0000000, _004_[4], Q[0] };
  assign { _042_[30:3], _042_[0] } = { _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], Q[0] };
  assign { _043_[30:3], _043_[1:0] } = { _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _043_[31], _040_[1], Q[0] };
endmodule
